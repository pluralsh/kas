// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.0
// source: pkg/agentcfg/agentcfg.proto

package agentcfg

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoggingLevelEnum int32

const (
	LoggingLevelEnum_info  LoggingLevelEnum = 0
	LoggingLevelEnum_debug LoggingLevelEnum = 1
	LoggingLevelEnum_warn  LoggingLevelEnum = 2
	LoggingLevelEnum_error LoggingLevelEnum = 3
)

// Enum value maps for LoggingLevelEnum.
var (
	LoggingLevelEnum_name = map[int32]string{
		0: "info",
		1: "debug",
		2: "warn",
		3: "error",
	}
	LoggingLevelEnum_value = map[string]int32{
		"info":  0,
		"debug": 1,
		"warn":  2,
		"error": 3,
	}
)

func (x LoggingLevelEnum) Enum() *LoggingLevelEnum {
	p := new(LoggingLevelEnum)
	*p = x
	return p
}

func (x LoggingLevelEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoggingLevelEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_agentcfg_agentcfg_proto_enumTypes[0].Descriptor()
}

func (LoggingLevelEnum) Type() protoreflect.EnumType {
	return &file_pkg_agentcfg_agentcfg_proto_enumTypes[0]
}

func (x LoggingLevelEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoggingLevelEnum.Descriptor instead.
func (LoggingLevelEnum) EnumDescriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{0}
}

type PathCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Glob string `protobuf:"bytes,1,opt,name=glob,proto3" json:"glob,omitempty"`
}

func (x *PathCF) Reset() {
	*x = PathCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathCF) ProtoMessage() {}

func (x *PathCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathCF.ProtoReflect.Descriptor instead.
func (*PathCF) Descriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{0}
}

func (x *PathCF) GetGlob() string {
	if x != nil {
		return x.Glob
	}
	return ""
}

type ManifestProjectCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DefaultNamespace string               `protobuf:"bytes,4,opt,name=default_namespace,proto3" json:"default_namespace,omitempty"`
	Paths            []*PathCF            `protobuf:"bytes,5,rep,name=paths,proto3" json:"paths,omitempty"`
	ReconcileTimeout *durationpb.Duration `protobuf:"bytes,6,opt,name=reconcile_timeout,proto3" json:"reconcile_timeout,omitempty"`
	DryRunStrategy   string               `protobuf:"bytes,7,opt,name=dry_run_strategy,proto3" json:"dry_run_strategy,omitempty"`
	// Types that are assignable to PruneOneof:
	//	*ManifestProjectCF_Prune
	PruneOneof             isManifestProjectCF_PruneOneof `protobuf_oneof:"prune_oneof"`
	PruneTimeout           *durationpb.Duration           `protobuf:"bytes,9,opt,name=prune_timeout,proto3" json:"prune_timeout,omitempty"`
	PrunePropagationPolicy string                         `protobuf:"bytes,10,opt,name=prune_propagation_policy,proto3" json:"prune_propagation_policy,omitempty"`
	InventoryPolicy        string                         `protobuf:"bytes,11,opt,name=inventory_policy,proto3" json:"inventory_policy,omitempty"`
}

func (x *ManifestProjectCF) Reset() {
	*x = ManifestProjectCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManifestProjectCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManifestProjectCF) ProtoMessage() {}

func (x *ManifestProjectCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManifestProjectCF.ProtoReflect.Descriptor instead.
func (*ManifestProjectCF) Descriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{1}
}

func (x *ManifestProjectCF) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ManifestProjectCF) GetDefaultNamespace() string {
	if x != nil {
		return x.DefaultNamespace
	}
	return ""
}

func (x *ManifestProjectCF) GetPaths() []*PathCF {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *ManifestProjectCF) GetReconcileTimeout() *durationpb.Duration {
	if x != nil {
		return x.ReconcileTimeout
	}
	return nil
}

func (x *ManifestProjectCF) GetDryRunStrategy() string {
	if x != nil {
		return x.DryRunStrategy
	}
	return ""
}

func (m *ManifestProjectCF) GetPruneOneof() isManifestProjectCF_PruneOneof {
	if m != nil {
		return m.PruneOneof
	}
	return nil
}

func (x *ManifestProjectCF) GetPrune() bool {
	if x, ok := x.GetPruneOneof().(*ManifestProjectCF_Prune); ok {
		return x.Prune
	}
	return false
}

func (x *ManifestProjectCF) GetPruneTimeout() *durationpb.Duration {
	if x != nil {
		return x.PruneTimeout
	}
	return nil
}

func (x *ManifestProjectCF) GetPrunePropagationPolicy() string {
	if x != nil {
		return x.PrunePropagationPolicy
	}
	return ""
}

func (x *ManifestProjectCF) GetInventoryPolicy() string {
	if x != nil {
		return x.InventoryPolicy
	}
	return ""
}

type isManifestProjectCF_PruneOneof interface {
	isManifestProjectCF_PruneOneof()
}

type ManifestProjectCF_Prune struct {
	Prune bool `protobuf:"varint,8,opt,name=prune,proto3,oneof"`
}

func (*ManifestProjectCF_Prune) isManifestProjectCF_PruneOneof() {}

type GitopsCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManifestProjects []*ManifestProjectCF `protobuf:"bytes,1,rep,name=manifest_projects,proto3" json:"manifest_projects,omitempty"`
}

func (x *GitopsCF) Reset() {
	*x = GitopsCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitopsCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitopsCF) ProtoMessage() {}

func (x *GitopsCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitopsCF.ProtoReflect.Descriptor instead.
func (*GitopsCF) Descriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{2}
}

func (x *GitopsCF) GetManifestProjects() []*ManifestProjectCF {
	if x != nil {
		return x.ManifestProjects
	}
	return nil
}

type ObservabilityCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logging *LoggingCF `protobuf:"bytes,1,opt,name=logging,proto3" json:"logging,omitempty"`
}

func (x *ObservabilityCF) Reset() {
	*x = ObservabilityCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObservabilityCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObservabilityCF) ProtoMessage() {}

func (x *ObservabilityCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObservabilityCF.ProtoReflect.Descriptor instead.
func (*ObservabilityCF) Descriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{3}
}

func (x *ObservabilityCF) GetLogging() *LoggingCF {
	if x != nil {
		return x.Logging
	}
	return nil
}

type LoggingCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level LoggingLevelEnum `protobuf:"varint,1,opt,name=level,proto3,enum=gitlab.agent.agentcfg.LoggingLevelEnum" json:"level,omitempty"`
}

func (x *LoggingCF) Reset() {
	*x = LoggingCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoggingCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggingCF) ProtoMessage() {}

func (x *LoggingCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggingCF.ProtoReflect.Descriptor instead.
func (*LoggingCF) Descriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{4}
}

func (x *LoggingCF) GetLevel() LoggingLevelEnum {
	if x != nil {
		return x.Level
	}
	return LoggingLevelEnum_info
}

type CiAccessCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Projects []*CiAccessProjectCF `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	Groups   []*CiAccessGroupCF   `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *CiAccessCF) Reset() {
	*x = CiAccessCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CiAccessCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CiAccessCF) ProtoMessage() {}

func (x *CiAccessCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CiAccessCF.ProtoReflect.Descriptor instead.
func (*CiAccessCF) Descriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{5}
}

func (x *CiAccessCF) GetProjects() []*CiAccessProjectCF {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *CiAccessCF) GetGroups() []*CiAccessGroupCF {
	if x != nil {
		return x.Groups
	}
	return nil
}

type CiAccessProjectCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DefaultNamespace string        `protobuf:"bytes,2,opt,name=default_namespace,proto3" json:"default_namespace,omitempty"`
	AccessAs         *CiAccessAsCF `protobuf:"bytes,3,opt,name=access_as,proto3" json:"access_as,omitempty"`
}

func (x *CiAccessProjectCF) Reset() {
	*x = CiAccessProjectCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CiAccessProjectCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CiAccessProjectCF) ProtoMessage() {}

func (x *CiAccessProjectCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CiAccessProjectCF.ProtoReflect.Descriptor instead.
func (*CiAccessProjectCF) Descriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{6}
}

func (x *CiAccessProjectCF) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CiAccessProjectCF) GetDefaultNamespace() string {
	if x != nil {
		return x.DefaultNamespace
	}
	return ""
}

func (x *CiAccessProjectCF) GetAccessAs() *CiAccessAsCF {
	if x != nil {
		return x.AccessAs
	}
	return nil
}

type CiAccessGroupCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DefaultNamespace string        `protobuf:"bytes,2,opt,name=default_namespace,proto3" json:"default_namespace,omitempty"`
	AccessAs         *CiAccessAsCF `protobuf:"bytes,3,opt,name=access_as,proto3" json:"access_as,omitempty"`
}

func (x *CiAccessGroupCF) Reset() {
	*x = CiAccessGroupCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CiAccessGroupCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CiAccessGroupCF) ProtoMessage() {}

func (x *CiAccessGroupCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CiAccessGroupCF.ProtoReflect.Descriptor instead.
func (*CiAccessGroupCF) Descriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{7}
}

func (x *CiAccessGroupCF) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CiAccessGroupCF) GetDefaultNamespace() string {
	if x != nil {
		return x.DefaultNamespace
	}
	return ""
}

func (x *CiAccessGroupCF) GetAccessAs() *CiAccessAsCF {
	if x != nil {
		return x.AccessAs
	}
	return nil
}

type CiAccessAsCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to As:
	//	*CiAccessAsCF_Agent
	//	*CiAccessAsCF_Impersonate
	//	*CiAccessAsCF_CiJob
	As isCiAccessAsCF_As `protobuf_oneof:"as"`
}

func (x *CiAccessAsCF) Reset() {
	*x = CiAccessAsCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CiAccessAsCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CiAccessAsCF) ProtoMessage() {}

func (x *CiAccessAsCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CiAccessAsCF.ProtoReflect.Descriptor instead.
func (*CiAccessAsCF) Descriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{8}
}

func (m *CiAccessAsCF) GetAs() isCiAccessAsCF_As {
	if m != nil {
		return m.As
	}
	return nil
}

func (x *CiAccessAsCF) GetAgent() *CiAccessAsAgentCF {
	if x, ok := x.GetAs().(*CiAccessAsCF_Agent); ok {
		return x.Agent
	}
	return nil
}

func (x *CiAccessAsCF) GetImpersonate() *CiAccessAsImpersonateCF {
	if x, ok := x.GetAs().(*CiAccessAsCF_Impersonate); ok {
		return x.Impersonate
	}
	return nil
}

func (x *CiAccessAsCF) GetCiJob() *CiAccessAsCiJobCF {
	if x, ok := x.GetAs().(*CiAccessAsCF_CiJob); ok {
		return x.CiJob
	}
	return nil
}

type isCiAccessAsCF_As interface {
	isCiAccessAsCF_As()
}

type CiAccessAsCF_Agent struct {
	Agent *CiAccessAsAgentCF `protobuf:"bytes,1,opt,name=agent,proto3,oneof"`
}

type CiAccessAsCF_Impersonate struct {
	Impersonate *CiAccessAsImpersonateCF `protobuf:"bytes,2,opt,name=impersonate,proto3,oneof"`
}

type CiAccessAsCF_CiJob struct {
	CiJob *CiAccessAsCiJobCF `protobuf:"bytes,3,opt,name=ci_job,proto3,oneof"`
}

func (*CiAccessAsCF_Agent) isCiAccessAsCF_As() {}

func (*CiAccessAsCF_Impersonate) isCiAccessAsCF_As() {}

func (*CiAccessAsCF_CiJob) isCiAccessAsCF_As() {}

type CiAccessAsAgentCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CiAccessAsAgentCF) Reset() {
	*x = CiAccessAsAgentCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CiAccessAsAgentCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CiAccessAsAgentCF) ProtoMessage() {}

func (x *CiAccessAsAgentCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CiAccessAsAgentCF.ProtoReflect.Descriptor instead.
func (*CiAccessAsAgentCF) Descriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{9}
}

type CiAccessAsCiJobCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CiAccessAsCiJobCF) Reset() {
	*x = CiAccessAsCiJobCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CiAccessAsCiJobCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CiAccessAsCiJobCF) ProtoMessage() {}

func (x *CiAccessAsCiJobCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CiAccessAsCiJobCF.ProtoReflect.Descriptor instead.
func (*CiAccessAsCiJobCF) Descriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{10}
}

type CiAccessAsImpersonateCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string           `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Groups   []string         `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	Uid      string           `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Extra    []*ExtraKeyValCF `protobuf:"bytes,4,rep,name=extra,proto3" json:"extra,omitempty"`
}

func (x *CiAccessAsImpersonateCF) Reset() {
	*x = CiAccessAsImpersonateCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CiAccessAsImpersonateCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CiAccessAsImpersonateCF) ProtoMessage() {}

func (x *CiAccessAsImpersonateCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CiAccessAsImpersonateCF.ProtoReflect.Descriptor instead.
func (*CiAccessAsImpersonateCF) Descriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{11}
}

func (x *CiAccessAsImpersonateCF) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CiAccessAsImpersonateCF) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *CiAccessAsImpersonateCF) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *CiAccessAsImpersonateCF) GetExtra() []*ExtraKeyValCF {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ExtraKeyValCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val []string `protobuf:"bytes,2,rep,name=val,proto3" json:"val,omitempty"`
}

func (x *ExtraKeyValCF) Reset() {
	*x = ExtraKeyValCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtraKeyValCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtraKeyValCF) ProtoMessage() {}

func (x *ExtraKeyValCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtraKeyValCF.ProtoReflect.Descriptor instead.
func (*ExtraKeyValCF) Descriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{12}
}

func (x *ExtraKeyValCF) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ExtraKeyValCF) GetVal() []string {
	if x != nil {
		return x.Val
	}
	return nil
}

type StarboardCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VulnerabilityReport *VulnerabilityReport `protobuf:"bytes,1,opt,name=vulnerability_report,proto3" json:"vulnerability_report,omitempty"`
}

func (x *StarboardCF) Reset() {
	*x = StarboardCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StarboardCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarboardCF) ProtoMessage() {}

func (x *StarboardCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarboardCF.ProtoReflect.Descriptor instead.
func (*StarboardCF) Descriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{13}
}

func (x *StarboardCF) GetVulnerabilityReport() *VulnerabilityReport {
	if x != nil {
		return x.VulnerabilityReport
	}
	return nil
}

type VulnerabilityReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespaces []string           `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	Filters    []*StarboardFilter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *VulnerabilityReport) Reset() {
	*x = VulnerabilityReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnerabilityReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityReport) ProtoMessage() {}

func (x *VulnerabilityReport) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnerabilityReport.ProtoReflect.Descriptor instead.
func (*VulnerabilityReport) Descriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{14}
}

func (x *VulnerabilityReport) GetNamespaces() []string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

func (x *VulnerabilityReport) GetFilters() []*StarboardFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type StarboardFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespaces []string `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	Resources  []string `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
	Containers []string `protobuf:"bytes,3,rep,name=containers,proto3" json:"containers,omitempty"`
	Kinds      []string `protobuf:"bytes,4,rep,name=kinds,proto3" json:"kinds,omitempty"`
}

func (x *StarboardFilter) Reset() {
	*x = StarboardFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StarboardFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarboardFilter) ProtoMessage() {}

func (x *StarboardFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarboardFilter.ProtoReflect.Descriptor instead.
func (*StarboardFilter) Descriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{15}
}

func (x *StarboardFilter) GetNamespaces() []string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

func (x *StarboardFilter) GetResources() []string {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *StarboardFilter) GetContainers() []string {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *StarboardFilter) GetKinds() []string {
	if x != nil {
		return x.Kinds
	}
	return nil
}

type ConfigurationFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gitops        *GitopsCF        `protobuf:"bytes,1,opt,name=gitops,proto3" json:"gitops,omitempty"`
	Observability *ObservabilityCF `protobuf:"bytes,2,opt,name=observability,proto3" json:"observability,omitempty"`
	CiAccess      *CiAccessCF      `protobuf:"bytes,4,opt,name=ci_access,proto3" json:"ci_access,omitempty"`
	Starboard     *StarboardCF     `protobuf:"bytes,5,opt,name=starboard,proto3" json:"starboard,omitempty"`
}

func (x *ConfigurationFile) Reset() {
	*x = ConfigurationFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationFile) ProtoMessage() {}

func (x *ConfigurationFile) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationFile.ProtoReflect.Descriptor instead.
func (*ConfigurationFile) Descriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{16}
}

func (x *ConfigurationFile) GetGitops() *GitopsCF {
	if x != nil {
		return x.Gitops
	}
	return nil
}

func (x *ConfigurationFile) GetObservability() *ObservabilityCF {
	if x != nil {
		return x.Observability
	}
	return nil
}

func (x *ConfigurationFile) GetCiAccess() *CiAccessCF {
	if x != nil {
		return x.CiAccess
	}
	return nil
}

func (x *ConfigurationFile) GetStarboard() *StarboardCF {
	if x != nil {
		return x.Starboard
	}
	return nil
}

type AgentConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gitops        *GitopsCF        `protobuf:"bytes,1,opt,name=gitops,proto3" json:"gitops,omitempty"`
	Observability *ObservabilityCF `protobuf:"bytes,2,opt,name=observability,proto3" json:"observability,omitempty"`
	AgentId       int64            `protobuf:"varint,4,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	ProjectId     int64            `protobuf:"varint,5,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	CiAccess      *CiAccessCF      `protobuf:"bytes,6,opt,name=ci_access,json=ciAccess,proto3" json:"ci_access,omitempty"`
	Starboard     *StarboardCF     `protobuf:"bytes,7,opt,name=starboard,proto3" json:"starboard,omitempty"`
}

func (x *AgentConfiguration) Reset() {
	*x = AgentConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentConfiguration) ProtoMessage() {}

func (x *AgentConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agentcfg_agentcfg_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentConfiguration.ProtoReflect.Descriptor instead.
func (*AgentConfiguration) Descriptor() ([]byte, []int) {
	return file_pkg_agentcfg_agentcfg_proto_rawDescGZIP(), []int{17}
}

func (x *AgentConfiguration) GetGitops() *GitopsCF {
	if x != nil {
		return x.Gitops
	}
	return nil
}

func (x *AgentConfiguration) GetObservability() *ObservabilityCF {
	if x != nil {
		return x.Observability
	}
	return nil
}

func (x *AgentConfiguration) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *AgentConfiguration) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *AgentConfiguration) GetCiAccess() *CiAccessCF {
	if x != nil {
		return x.CiAccess
	}
	return nil
}

func (x *AgentConfiguration) GetStarboard() *StarboardCF {
	if x != nil {
		return x.Starboard
	}
	return nil
}

var File_pkg_agentcfg_agentcfg_proto protoreflect.FileDescriptor

var file_pkg_agentcfg_agentcfg_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x66, 0x67, 0x2f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x63, 0x66, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x63, 0x66, 0x67, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x25, 0x0a,
	0x06, 0x50, 0x61, 0x74, 0x68, 0x43, 0x46, 0x12, 0x1b, 0x0a, 0x04, 0x67, 0x6c, 0x6f, 0x62, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x04,
	0x67, 0x6c, 0x6f, 0x62, 0x22, 0xdf, 0x04, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x46, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x33, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x66, 0x67, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x43, 0x46, 0x52,
	0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x47, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63,
	0x69, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12,
	0x49, 0x0a, 0x10, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xfa, 0x42, 0x1a, 0x72, 0x18,
	0x52, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x10, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75,
	0x6e, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x16, 0x0a, 0x05, 0x70, 0x72,
	0x75, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x05, 0x70, 0x72, 0x75,
	0x6e, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x12, 0x63, 0x0a, 0x18, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0xfa, 0x42, 0x24, 0x72, 0x22, 0x52, 0x00, 0x52, 0x06,
	0x6f, 0x72, 0x70, 0x68, 0x61, 0x6e, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x18,
	0x70, 0x72, 0x75, 0x6e, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x61, 0x0a, 0x10, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x35, 0xfa, 0x42, 0x32, 0x72, 0x30, 0x52, 0x00, 0x52, 0x0a, 0x6d, 0x75, 0x73,
	0x74, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x15, 0x61, 0x64, 0x6f, 0x70, 0x74, 0x5f, 0x69,
	0x66, 0x5f, 0x6e, 0x6f, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x09,
	0x61, 0x64, 0x6f, 0x70, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x52, 0x10, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x70,
	0x72, 0x75, 0x6e, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03,
	0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0x62, 0x0a, 0x08, 0x47, 0x69, 0x74, 0x6f, 0x70, 0x73,
	0x43, 0x46, 0x12, 0x56, 0x0a, 0x11, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x63, 0x66, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x46, 0x52, 0x11, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x4d, 0x0a, 0x0f, 0x4f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x46, 0x12, 0x3a, 0x0a,
	0x07, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x63, 0x66, 0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x46,
	0x52, 0x07, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x22, 0x4c, 0x0a, 0x09, 0x4c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x43, 0x46, 0x12, 0x3f, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x66, 0x67, 0x2e, 0x6c, 0x6f,
	0x67, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x65, 0x6e, 0x75, 0x6d,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x92, 0x01, 0x0a, 0x0a, 0x43, 0x69, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x46, 0x12, 0x44, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x66, 0x67,
	0x2e, 0x43, 0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x46, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x3e, 0x0a, 0x06,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x63, 0x66, 0x67, 0x2e, 0x43, 0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x46, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x9d, 0x01, 0x0a,
	0x11, 0x43, 0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x46, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x63, 0x66, 0x67, 0x2e, 0x43, 0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x73, 0x43,
	0x46, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x73, 0x22, 0x9b, 0x01, 0x0a,
	0x0f, 0x43, 0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x46,
	0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x63,
	0x66, 0x67, 0x2e, 0x43, 0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x73, 0x43, 0x46, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x0c, 0x43,
	0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x73, 0x43, 0x46, 0x12, 0x40, 0x0a, 0x05, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x63,
	0x66, 0x67, 0x2e, 0x43, 0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x73, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x43, 0x46, 0x48, 0x00, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x52, 0x0a,
	0x0b, 0x69, 0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x66, 0x67, 0x2e, 0x43, 0x69, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x41, 0x73, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65,
	0x43, 0x46, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74,
	0x65, 0x12, 0x42, 0x0a, 0x06, 0x63, 0x69, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x66, 0x67, 0x2e, 0x43, 0x69, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x41, 0x73, 0x43, 0x69, 0x4a, 0x6f, 0x62, 0x43, 0x46, 0x48, 0x00, 0x52, 0x06, 0x63,
	0x69, 0x5f, 0x6a, 0x6f, 0x62, 0x42, 0x09, 0x0a, 0x02, 0x61, 0x73, 0x12, 0x03, 0xf8, 0x42, 0x01,
	0x22, 0x13, 0x0a, 0x11, 0x43, 0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x73, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x43, 0x46, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x69, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x41, 0x73, 0x43, 0x69, 0x4a, 0x6f, 0x62, 0x43, 0x46, 0x22, 0xb2, 0x01, 0x0a, 0x17, 0x43,
	0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x73, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x74, 0x65, 0x43, 0x46, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20,
	0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42, 0x09,
	0x92, 0x01, 0x06, 0x22, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x66, 0x67, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x43, 0x46, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22,
	0x52, 0x0a, 0x0d, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x43, 0x46,
	0x12, 0x19, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x03, 0x76,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02,
	0x08, 0x01, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x22, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x03,
	0x76, 0x61, 0x6c, 0x22, 0x6d, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x43, 0x46, 0x12, 0x5e, 0x0a, 0x14, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x66, 0x67, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x14, 0x76, 0x75,
	0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x22, 0x77, 0x0a, 0x13, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x63,
	0x66, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x0f,
	0x53, 0x74, 0x61, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x6b, 0x69, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x69,
	0x6e, 0x64, 0x73, 0x22, 0xa3, 0x02, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x66,
	0x67, 0x2e, 0x47, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x43, 0x46, 0x52, 0x06, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x73, 0x12, 0x4c, 0x0a, 0x0d, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x66,
	0x67, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43,
	0x46, 0x52, 0x0d, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x3f, 0x0a, 0x09, 0x63, 0x69, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x66, 0x67, 0x2e, 0x43, 0x69, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x46, 0x52, 0x09, 0x63, 0x69, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x40, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x66, 0x67, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x46, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0xdd, 0x02, 0x0a, 0x12, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x37, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x66, 0x67, 0x2e, 0x47, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x43,
	0x46, 0x52, 0x06, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x12, 0x4c, 0x0a, 0x0d, 0x6f, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x66, 0x67, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x46, 0x52, 0x0d, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x3e, 0x0a, 0x09, 0x63, 0x69, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x66, 0x67, 0x2e, 0x43, 0x69, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x46, 0x52, 0x08, 0x63, 0x69, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x40, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x66, 0x67, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x46, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x2a, 0x3e, 0x0a, 0x12, 0x6c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x12,
	0x08, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x77, 0x61, 0x72, 0x6e, 0x10, 0x02, 0x12, 0x09,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x03, 0x42, 0x49, 0x5a, 0x47, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2d, 0x6f,
	0x72, 0x67, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2d, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x34, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x63, 0x66, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_agentcfg_agentcfg_proto_rawDescOnce sync.Once
	file_pkg_agentcfg_agentcfg_proto_rawDescData = file_pkg_agentcfg_agentcfg_proto_rawDesc
)

func file_pkg_agentcfg_agentcfg_proto_rawDescGZIP() []byte {
	file_pkg_agentcfg_agentcfg_proto_rawDescOnce.Do(func() {
		file_pkg_agentcfg_agentcfg_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_agentcfg_agentcfg_proto_rawDescData)
	})
	return file_pkg_agentcfg_agentcfg_proto_rawDescData
}

var file_pkg_agentcfg_agentcfg_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_agentcfg_agentcfg_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_pkg_agentcfg_agentcfg_proto_goTypes = []interface{}{
	(LoggingLevelEnum)(0),           // 0: gitlab.agent.agentcfg.logging_level_enum
	(*PathCF)(nil),                  // 1: gitlab.agent.agentcfg.PathCF
	(*ManifestProjectCF)(nil),       // 2: gitlab.agent.agentcfg.ManifestProjectCF
	(*GitopsCF)(nil),                // 3: gitlab.agent.agentcfg.GitopsCF
	(*ObservabilityCF)(nil),         // 4: gitlab.agent.agentcfg.ObservabilityCF
	(*LoggingCF)(nil),               // 5: gitlab.agent.agentcfg.LoggingCF
	(*CiAccessCF)(nil),              // 6: gitlab.agent.agentcfg.CiAccessCF
	(*CiAccessProjectCF)(nil),       // 7: gitlab.agent.agentcfg.CiAccessProjectCF
	(*CiAccessGroupCF)(nil),         // 8: gitlab.agent.agentcfg.CiAccessGroupCF
	(*CiAccessAsCF)(nil),            // 9: gitlab.agent.agentcfg.CiAccessAsCF
	(*CiAccessAsAgentCF)(nil),       // 10: gitlab.agent.agentcfg.CiAccessAsAgentCF
	(*CiAccessAsCiJobCF)(nil),       // 11: gitlab.agent.agentcfg.CiAccessAsCiJobCF
	(*CiAccessAsImpersonateCF)(nil), // 12: gitlab.agent.agentcfg.CiAccessAsImpersonateCF
	(*ExtraKeyValCF)(nil),           // 13: gitlab.agent.agentcfg.ExtraKeyValCF
	(*StarboardCF)(nil),             // 14: gitlab.agent.agentcfg.StarboardCF
	(*VulnerabilityReport)(nil),     // 15: gitlab.agent.agentcfg.VulnerabilityReport
	(*StarboardFilter)(nil),         // 16: gitlab.agent.agentcfg.StarboardFilter
	(*ConfigurationFile)(nil),       // 17: gitlab.agent.agentcfg.ConfigurationFile
	(*AgentConfiguration)(nil),      // 18: gitlab.agent.agentcfg.AgentConfiguration
	(*durationpb.Duration)(nil),     // 19: google.protobuf.Duration
}
var file_pkg_agentcfg_agentcfg_proto_depIdxs = []int32{
	1,  // 0: gitlab.agent.agentcfg.ManifestProjectCF.paths:type_name -> gitlab.agent.agentcfg.PathCF
	19, // 1: gitlab.agent.agentcfg.ManifestProjectCF.reconcile_timeout:type_name -> google.protobuf.Duration
	19, // 2: gitlab.agent.agentcfg.ManifestProjectCF.prune_timeout:type_name -> google.protobuf.Duration
	2,  // 3: gitlab.agent.agentcfg.GitopsCF.manifest_projects:type_name -> gitlab.agent.agentcfg.ManifestProjectCF
	5,  // 4: gitlab.agent.agentcfg.ObservabilityCF.logging:type_name -> gitlab.agent.agentcfg.LoggingCF
	0,  // 5: gitlab.agent.agentcfg.LoggingCF.level:type_name -> gitlab.agent.agentcfg.logging_level_enum
	7,  // 6: gitlab.agent.agentcfg.CiAccessCF.projects:type_name -> gitlab.agent.agentcfg.CiAccessProjectCF
	8,  // 7: gitlab.agent.agentcfg.CiAccessCF.groups:type_name -> gitlab.agent.agentcfg.CiAccessGroupCF
	9,  // 8: gitlab.agent.agentcfg.CiAccessProjectCF.access_as:type_name -> gitlab.agent.agentcfg.CiAccessAsCF
	9,  // 9: gitlab.agent.agentcfg.CiAccessGroupCF.access_as:type_name -> gitlab.agent.agentcfg.CiAccessAsCF
	10, // 10: gitlab.agent.agentcfg.CiAccessAsCF.agent:type_name -> gitlab.agent.agentcfg.CiAccessAsAgentCF
	12, // 11: gitlab.agent.agentcfg.CiAccessAsCF.impersonate:type_name -> gitlab.agent.agentcfg.CiAccessAsImpersonateCF
	11, // 12: gitlab.agent.agentcfg.CiAccessAsCF.ci_job:type_name -> gitlab.agent.agentcfg.CiAccessAsCiJobCF
	13, // 13: gitlab.agent.agentcfg.CiAccessAsImpersonateCF.extra:type_name -> gitlab.agent.agentcfg.ExtraKeyValCF
	15, // 14: gitlab.agent.agentcfg.StarboardCF.vulnerability_report:type_name -> gitlab.agent.agentcfg.VulnerabilityReport
	16, // 15: gitlab.agent.agentcfg.VulnerabilityReport.filters:type_name -> gitlab.agent.agentcfg.StarboardFilter
	3,  // 16: gitlab.agent.agentcfg.ConfigurationFile.gitops:type_name -> gitlab.agent.agentcfg.GitopsCF
	4,  // 17: gitlab.agent.agentcfg.ConfigurationFile.observability:type_name -> gitlab.agent.agentcfg.ObservabilityCF
	6,  // 18: gitlab.agent.agentcfg.ConfigurationFile.ci_access:type_name -> gitlab.agent.agentcfg.CiAccessCF
	14, // 19: gitlab.agent.agentcfg.ConfigurationFile.starboard:type_name -> gitlab.agent.agentcfg.StarboardCF
	3,  // 20: gitlab.agent.agentcfg.AgentConfiguration.gitops:type_name -> gitlab.agent.agentcfg.GitopsCF
	4,  // 21: gitlab.agent.agentcfg.AgentConfiguration.observability:type_name -> gitlab.agent.agentcfg.ObservabilityCF
	6,  // 22: gitlab.agent.agentcfg.AgentConfiguration.ci_access:type_name -> gitlab.agent.agentcfg.CiAccessCF
	14, // 23: gitlab.agent.agentcfg.AgentConfiguration.starboard:type_name -> gitlab.agent.agentcfg.StarboardCF
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_pkg_agentcfg_agentcfg_proto_init() }
func file_pkg_agentcfg_agentcfg_proto_init() {
	if File_pkg_agentcfg_agentcfg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_agentcfg_agentcfg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agentcfg_agentcfg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManifestProjectCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agentcfg_agentcfg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitopsCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agentcfg_agentcfg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObservabilityCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agentcfg_agentcfg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoggingCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agentcfg_agentcfg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CiAccessCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agentcfg_agentcfg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CiAccessProjectCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agentcfg_agentcfg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CiAccessGroupCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agentcfg_agentcfg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CiAccessAsCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agentcfg_agentcfg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CiAccessAsAgentCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agentcfg_agentcfg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CiAccessAsCiJobCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agentcfg_agentcfg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CiAccessAsImpersonateCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agentcfg_agentcfg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtraKeyValCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agentcfg_agentcfg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StarboardCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agentcfg_agentcfg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VulnerabilityReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agentcfg_agentcfg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StarboardFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agentcfg_agentcfg_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agentcfg_agentcfg_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_agentcfg_agentcfg_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ManifestProjectCF_Prune)(nil),
	}
	file_pkg_agentcfg_agentcfg_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*CiAccessAsCF_Agent)(nil),
		(*CiAccessAsCF_Impersonate)(nil),
		(*CiAccessAsCF_CiJob)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_agentcfg_agentcfg_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_agentcfg_agentcfg_proto_goTypes,
		DependencyIndexes: file_pkg_agentcfg_agentcfg_proto_depIdxs,
		EnumInfos:         file_pkg_agentcfg_agentcfg_proto_enumTypes,
		MessageInfos:      file_pkg_agentcfg_agentcfg_proto_msgTypes,
	}.Build()
	File_pkg_agentcfg_agentcfg_proto = out.File
	file_pkg_agentcfg_agentcfg_proto_rawDesc = nil
	file_pkg_agentcfg_agentcfg_proto_goTypes = nil
	file_pkg_agentcfg_agentcfg_proto_depIdxs = nil
}
