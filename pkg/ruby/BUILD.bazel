load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_files")
load("@rules_proto_grpc//ruby:defs.bzl", "ruby_proto_compile")
load("//build:proto_def.bzl", "ruby_grpc_compile")
load("@bazel_skylib//lib:paths.bzl", "paths")

PROTO = [
    "pkg/entity",
    "internal/module/agent_tracker",
]

RPC = [
    "internal/module/agent_tracker",
    "internal/module/configuration_project",
    "internal/module/notifications",
]

[
    ruby_proto_compile(
        name = "%s_proto" % paths.basename(name),
        protos = [
            "//%s:proto" % name,
        ],
        tags = ["manual"],
    )
    for name in PROTO
]

[
    ruby_proto_compile(
        name = "%s_rpc_proto" % paths.basename(name),
        protos = [
            "//%s/rpc:proto" % name,
        ],
        tags = ["manual"],
    )
    for name in RPC
]

[
    ruby_grpc_compile(
        name = "%s_services_proto" % paths.basename(name),
        protos = [
            "//%s/rpc:proto" % name,
        ],
        tags = ["manual"],
    )
    for name in RPC
]

write_source_files(
    name = "extract_generated",
    diff_test = False,
    files = {
        "lib/%s/%s_pb.rb" % (
            name,
            paths.basename(name),
        ): ":%s_proto" % paths.basename(name)
        for name in PROTO
    } | {
        "lib/%s/rpc/rpc_pb.rb" % name: ":%s_rpc_proto" % paths.basename(name)
        for name in RPC
    } | {
        "lib/%s/rpc/rpc_services_pb.rb" % name: ":%s_services_proto" % paths.basename(name)
        for name in RPC
    },
    tags = ["manual"],
    visibility = ["//visibility:public"],
)
