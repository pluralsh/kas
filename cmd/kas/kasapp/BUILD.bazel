load("//build:build.bzl", "go_custom_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("//build:proto.bzl", "go_proto_generate")

go_proto_generate(
    src = "kasapp.proto",
    deps = [
        "//internal/tool/grpctool/automata:proto",
        "//internal/tool/prototool:proto",
        "@com_github_envoyproxy_protoc_gen_validate//validate:validate_proto",
        "@go_googleapis//google/rpc:status_proto",
    ],
)

go_library(
    name = "kasapp",
    srcs = [
        "agent_rpc_api.go",
        "api.go",
        "app.go",
        "app_agent_server.go",
        "app_api_server.go",
        "app_internal_server.go",
        "app_private_api_server.go",
        "configured_app.go",
        "defaulting.go",
        "doc.go",
        "kasapp.extra_methods.go",
        "kasapp.pb.go",
        "kasapp.pb.validate.go",
        "router.go",
        "router_agent.go",
        "router_kas.go",
        "router_kas_stream_forwarder.go",
        "router_kas_tunnel_finder.go",
        "rpc_api.go",
    ],
    importpath = "gitlab.com/gitlab-org/cluster-integration/gitlab-agent/v16/cmd/kas/kasapp",
    visibility = ["//visibility:public"],
    deps = [
        "//cmd",
        "//internal/api",
        "//internal/gitaly",
        "//internal/gitlab",
        "//internal/gitlab/api",
        "//internal/module/agent_configuration/server",
        "//internal/module/agent_tracker",
        "//internal/module/agent_tracker/server",
        "//internal/module/configuration_project/server",
        "//internal/module/flux/server",
        "//internal/module/gitlab_access/server",
        "//internal/module/gitops/server",
        "//internal/module/google_profiler/server",
        "//internal/module/kubernetes_api/server",
        "//internal/module/modserver",
        "//internal/module/modshared",
        "//internal/module/notifications/server",
        "//internal/module/observability",
        "//internal/module/observability/server",
        "//internal/module/reverse_tunnel",
        "//internal/module/reverse_tunnel/server",
        "//internal/module/reverse_tunnel/tracker",
        "//internal/module/usage_metrics",
        "//internal/module/usage_metrics/server",
        "//internal/tool/cache",
        "//internal/tool/errz",
        "//internal/tool/grpctool",
        "//internal/tool/grpctool/automata",
        "//internal/tool/httpz",
        "//internal/tool/ioz",
        "//internal/tool/logz",
        "//internal/tool/metric",
        "//internal/tool/prototool",
        "//internal/tool/redistool",
        "//internal/tool/retry",
        "//internal/tool/tlstool",
        "//internal/tool/wstunnel",
        "//pkg/kascfg",
        "@com_github_ash2k_stager//:stager",
        "@com_github_envoyproxy_protoc_gen_validate//validate:go_default_library",
        "@com_github_getsentry_sentry_go//:sentry-go",
        "@com_github_go_logr_zapr//:zapr",
        "@com_github_grpc_ecosystem_go_grpc_middleware_providers_prometheus//:prometheus",
        "@com_github_grpc_ecosystem_go_grpc_middleware_v2//:go-grpc-middleware",
        "@com_github_grpc_ecosystem_go_grpc_middleware_v2//interceptors/auth",
        "@com_github_grpc_ecosystem_go_grpc_middleware_v2//interceptors/validator",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/collectors",
        "@com_github_redis_go_redis_extra_redisotel_v9//:redisotel",
        "@com_github_redis_go_redis_extra_redisprometheus_v9//:redisprometheus",
        "@com_github_redis_go_redis_v9//:go-redis",
        "@com_github_spf13_cobra//:cobra",
        "@com_gitlab_gitlab_org_gitaly_v15//client",
        "@io_k8s_apimachinery//pkg/util/wait",
        "@io_k8s_klog_v2//:klog",
        "@io_k8s_sigs_yaml//:yaml",
        "@io_opentelemetry_go_contrib_instrumentation_google_golang_org_grpc_otelgrpc//:otelgrpc",
        "@io_opentelemetry_go_contrib_instrumentation_net_http_otelhttp//:otelhttp",
        "@io_opentelemetry_go_otel//:otel",
        "@io_opentelemetry_go_otel//codes",
        "@io_opentelemetry_go_otel//propagation",
        "@io_opentelemetry_go_otel//semconv/v1.17.0:v1_17_0",
        "@io_opentelemetry_go_otel_exporters_otlp_otlptrace_otlptracehttp//:otlptracehttp",
        "@io_opentelemetry_go_otel_metric//:metric",
        "@io_opentelemetry_go_otel_metric//global",
        "@io_opentelemetry_go_otel_sdk//resource",
        "@io_opentelemetry_go_otel_sdk//trace",
        "@io_opentelemetry_go_otel_trace//:trace",
        "@org_golang_google_genproto//googleapis/rpc/status",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//credentials",
        "@org_golang_google_grpc//credentials/insecure",
        "@org_golang_google_grpc//encoding/gzip",
        "@org_golang_google_grpc//grpclog",
        "@org_golang_google_grpc//keepalive",
        "@org_golang_google_grpc//metadata",
        "@org_golang_google_grpc//stats",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//encoding/protojson",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//reflect/protoreflect",
        "@org_golang_google_protobuf//runtime/protoimpl",
        "@org_golang_google_protobuf//types/known/anypb",
        "@org_golang_x_net//http2",
        "@org_golang_x_time//rate",
        "@org_uber_go_zap//:zap",
        "@org_uber_go_zap//zapcore",
        "@org_uber_go_zap//zapgrpc",
    ],
)

go_custom_test(
    name = "kasapp_test",
    srcs = [
        "agent_rpc_api_test.go",
        "api_test.go",
        "configured_app_test.go",
        "mock_for_test.go",
        "router_kas_stream_forwarder_test.go",
        "router_kas_tunnel_finder_test.go",
        "router_test.go",
    ],
    embed = [":kasapp"],
    deps = [
        "//internal/api",
        "//internal/gitlab/api",
        "//internal/module/modserver",
        "//internal/module/modshared",
        "//internal/module/reverse_tunnel",
        "//internal/module/reverse_tunnel/tracker",
        "//internal/tool/cache",
        "//internal/tool/errz",
        "//internal/tool/grpctool",
        "//internal/tool/grpctool/test",
        "//internal/tool/testing/mock_cache",
        "//internal/tool/testing/mock_gitlab",
        "//internal/tool/testing/mock_modserver",
        "//internal/tool/testing/mock_reverse_tunnel",
        "//internal/tool/testing/mock_reverse_tunnel_tracker",
        "//internal/tool/testing/mock_rpc",
        "//internal/tool/testing/mock_tool",
        "//internal/tool/testing/testhelpers",
        "//internal/tool/tlstool",
        "@com_github_getsentry_sentry_go//:sentry-go",
        "@com_github_golang_mock//gomock",
        "@com_github_google_go_cmp//cmp",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@io_k8s_apimachinery//pkg/util/wait",
        "@io_opentelemetry_go_otel_trace//:trace",
        "@org_golang_google_genproto//googleapis/rpc/status",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//credentials",
        "@org_golang_google_grpc//credentials/insecure",
        "@org_golang_google_grpc//metadata",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//testing/protocmp",
        "@org_uber_go_zap//:zap",
        "@org_uber_go_zap//zaptest",
    ],
)
