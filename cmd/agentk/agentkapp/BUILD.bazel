load("//build:build.bzl", "go_custom_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "agentkapp",
    srcs = [
        "api.go",
        "app.go",
        "app_internal_server.go",
        "doc.go",
        "leader_module_wrapper.go",
        "leader_runner.go",
        "logz.go",
        "module_runner.go",
        "rpc_api.go",
        "value_holder.go",
    ],
    importpath = "gitlab.com/gitlab-org/cluster-integration/gitlab-agent/v16/cmd/agentk/agentkapp",
    visibility = ["//visibility:public"],
    deps = [
        "//cmd",
        "//internal/api",
        "//internal/module/agent_configuration/rpc",
        "//internal/module/flux/agent",
        "//internal/module/gitlab_access/rpc",
        "//internal/module/gitops/agent/chartops",
        "//internal/module/gitops/agent/manifestops",
        "//internal/module/kubernetes_api/agent",
        "//internal/module/modagent",
        "//internal/module/modshared",
        "//internal/module/observability/agent",
        "//internal/module/remote_development/agent",
        "//internal/module/reverse_tunnel/agent",
        "//internal/module/starboard_vulnerability/agent",
        "//internal/tool/errz",
        "//internal/tool/grpctool",
        "//internal/tool/httpz",
        "//internal/tool/logz",
        "//internal/tool/memz",
        "//internal/tool/metric",
        "//internal/tool/prototool",
        "//internal/tool/retry",
        "//internal/tool/tlstool",
        "//internal/tool/wstunnel",
        "//pkg/agentcfg",
        "//pkg/entity",
        "@com_github_ash2k_stager//:stager",
        "@com_github_go_logr_zapr//:zapr",
        "@com_github_grpc_ecosystem_go_grpc_middleware_providers_prometheus//:prometheus",
        "@com_github_grpc_ecosystem_go_grpc_middleware_v2//interceptors/validator",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/collectors",
        "@com_github_spf13_cobra//:cobra",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/util/wait",
        "@io_k8s_cli_runtime//pkg/genericclioptions",
        "@io_k8s_client_go//kubernetes/scheme",
        "@io_k8s_client_go//kubernetes/typed/coordination/v1:coordination",
        "@io_k8s_client_go//kubernetes/typed/core/v1:core",
        "@io_k8s_client_go//tools/leaderelection",
        "@io_k8s_client_go//tools/leaderelection/resourcelock",
        "@io_k8s_client_go//tools/record",
        "@io_k8s_klog_v2//:klog",
        "@io_k8s_kubectl//pkg/cmd/util",
        "@io_k8s_sigs_controller_runtime//pkg/log",
        "@io_nhooyr_websocket//:websocket",
        "@io_opentelemetry_go_contrib_instrumentation_google_golang_org_grpc_otelgrpc//:otelgrpc",
        "@io_opentelemetry_go_otel//:otel",
        "@io_opentelemetry_go_otel//propagation",
        "@io_opentelemetry_go_otel_trace//:trace",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//credentials",
        "@org_golang_google_grpc//credentials/insecure",
        "@org_golang_google_grpc//encoding/gzip",
        "@org_golang_google_grpc//grpclog",
        "@org_golang_google_grpc//keepalive",
        "@org_golang_google_protobuf//types/known/anypb",
        "@org_uber_go_zap//:zap",
        "@org_uber_go_zap//buffer",
        "@org_uber_go_zap//zapcore",
        "@org_uber_go_zap//zapgrpc",
    ],
)

go_custom_test(
    name = "agentkapp_test",
    srcs = [
        "api_test.go",
        "app_test.go",
        "leader_election_test.go",
        "leader_module_wrapper_test.go",
        "mock_for_test.go",
        "module_runner_test.go",
        "value_holder_test.go",
    ],
    embed = [":agentkapp"],
    deps = [
        "//internal/module/agent_configuration/rpc",
        "//internal/module/gitlab_access/rpc",
        "//internal/module/modagent",
        "//internal/tool/grpctool",
        "//internal/tool/prototool",
        "//internal/tool/testing/matcher",
        "//internal/tool/testing/mock_gitlab_access",
        "//internal/tool/testing/mock_modagent",
        "//internal/tool/testing/mock_rpc",
        "//internal/tool/testing/testhelpers",
        "//pkg/agentcfg",
        "@com_github_google_go_cmp//cmp",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@io_k8s_apimachinery//pkg/util/wait",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//testing/protocmp",
        "@org_golang_google_protobuf//types/known/anypb",
        "@org_golang_x_sync//errgroup",
        "@org_uber_go_mock//gomock",
        "@org_uber_go_zap//zaptest",
    ],
)
