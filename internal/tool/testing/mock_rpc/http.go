// Code generated by MockGen. DO NOT EDIT.
// Source: gitlab.com/gitlab-org/cluster-integration/gitlab-agent/v14/internal/tool/testing/mock_rpc (interfaces: ResponseWriterFlusher)

// Package mock_rpc is a generated GoMock package.
package mock_rpc

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockResponseWriterFlusher is a mock of ResponseWriterFlusher interface.
type MockResponseWriterFlusher struct {
	ctrl     *gomock.Controller
	recorder *MockResponseWriterFlusherMockRecorder
}

// MockResponseWriterFlusherMockRecorder is the mock recorder for MockResponseWriterFlusher.
type MockResponseWriterFlusherMockRecorder struct {
	mock *MockResponseWriterFlusher
}

// NewMockResponseWriterFlusher creates a new mock instance.
func NewMockResponseWriterFlusher(ctrl *gomock.Controller) *MockResponseWriterFlusher {
	mock := &MockResponseWriterFlusher{ctrl: ctrl}
	mock.recorder = &MockResponseWriterFlusherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResponseWriterFlusher) EXPECT() *MockResponseWriterFlusherMockRecorder {
	return m.recorder
}

// Flush mocks base method.
func (m *MockResponseWriterFlusher) Flush() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Flush")
}

// Flush indicates an expected call of Flush.
func (mr *MockResponseWriterFlusherMockRecorder) Flush() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Flush", reflect.TypeOf((*MockResponseWriterFlusher)(nil).Flush))
}

// Header mocks base method.
func (m *MockResponseWriterFlusher) Header() http.Header {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Header")
	ret0, _ := ret[0].(http.Header)
	return ret0
}

// Header indicates an expected call of Header.
func (mr *MockResponseWriterFlusherMockRecorder) Header() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Header", reflect.TypeOf((*MockResponseWriterFlusher)(nil).Header))
}

// Write mocks base method.
func (m *MockResponseWriterFlusher) Write(arg0 []byte) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Write indicates an expected call of Write.
func (mr *MockResponseWriterFlusherMockRecorder) Write(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockResponseWriterFlusher)(nil).Write), arg0)
}

// WriteHeader mocks base method.
func (m *MockResponseWriterFlusher) WriteHeader(arg0 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "WriteHeader", arg0)
}

// WriteHeader indicates an expected call of WriteHeader.
func (mr *MockResponseWriterFlusherMockRecorder) WriteHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteHeader", reflect.TypeOf((*MockResponseWriterFlusher)(nil).WriteHeader), arg0)
}
