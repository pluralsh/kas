load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "mock_k8s",
    testonly = True,
    srcs = [
        "apiextensionclient_v1.go",
        "cache.go",
        "core_v1.go",
        "doc.go",
        "dynamic.go",
        "kubectl_cmd_util.go",
        "meta.go",
        "resource.go",
        "workqueue.go",
    ],
    importpath = "gitlab.com/gitlab-org/cluster-integration/gitlab-agent/v16/internal/tool/testing/mock_k8s",
    visibility = ["//:__subpackages__"],
    deps = [
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apiextensions_apiserver//pkg/apis/apiextensions/v1:apiextensions",
        "@io_k8s_apiextensions_apiserver//pkg/client/clientset/clientset/typed/apiextensions/v1:apiextensions",
        "@io_k8s_apimachinery//pkg/api/meta",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/apis/meta/v1/unstructured",
        "@io_k8s_apimachinery//pkg/labels",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/runtime/schema",
        "@io_k8s_apimachinery//pkg/types",
        "@io_k8s_apimachinery//pkg/watch",
        "@io_k8s_cli_runtime//pkg/resource",
        "@io_k8s_client_go//applyconfigurations/core/v1:core",
        "@io_k8s_client_go//discovery",
        "@io_k8s_client_go//dynamic",
        "@io_k8s_client_go//kubernetes",
        "@io_k8s_client_go//kubernetes/typed/core/v1:core",
        "@io_k8s_client_go//openapi",
        "@io_k8s_client_go//rest",
        "@io_k8s_client_go//tools/cache",
        "@io_k8s_client_go//tools/clientcmd",
        "@io_k8s_kubectl//pkg/util/openapi",
        "@io_k8s_kubectl//pkg/validation",
        "@org_uber_go_mock//gomock",
    ],
)
