package agent

import (
	"github.com/aquasecurity/starboard/pkg/starboard"
)

// starboardConfig is the configuration provided to the starboard plugin resolver.
// Normally, starboard reads this from a ConfigMap. The possible configuration values
// can be referenced at https://aquasecurity.github.io/starboard/v0.14.1/settings/
//
// In the future, we may make these values configurable via the agent configuration
// file if it becomes desirable for users to be able to do so.
var starboardConfig starboard.ConfigData = starboard.ConfigData{
	"vulnerabilityReports.scanner": "Trivy",
}

// Configuration used by the Trivy scan jobs.
// See https://aquasecurity.github.io/starboard/v0.14.1/integrations/vulnerability-scanners/trivy/#settings
// for the configuration values reference.
var trivyScannerConfig = starboard.PluginConfig{
	Data: map[string]string{
		// We need to be careful about this drifting away from the version which
		// Starboard expects, because different versions of Trivy can output different
		// report json. Should be in sync with
		// https://github.com/aquasecurity/starboard/blob/254d1c060ace45f929334d24b4c2d0d614029027/pkg/plugin/trivy/plugin.go#L250
		"trivy.imageRef":                  "docker.io/aquasec/trivy:0.25.2",
		"trivy.dbRepository":              "registry.gitlab.com/gitlab-org/security-products/dependencies/trivy-db-glad",
		"trivy.mode":                      "Standalone",
		"trivy.severity":                  "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL",
		"trivy.resources.limits.cpu":      "500m",
		"trivy.resources.limits.memory":   "500M",
		"trivy.resources.requests.cpu":    "100m",
		"trivy.resources.requests.memory": "100M",
	},
}

// Implementation of starboard.PluginContext which returns
// a local configuration instead of reading it from a ConfigMap.
type pluginContext struct {
	namespace          string
	serviceAccountName string
}

func (p *pluginContext) GetName() string {
	return "trivy"
}

func (p *pluginContext) EnsureConfig(config starboard.PluginConfig) error {
	// no-op
	return nil
}

func (p *pluginContext) GetConfig() (starboard.PluginConfig, error) {
	return trivyScannerConfig, nil
}

func (p *pluginContext) GetNamespace() string {
	return p.namespace
}

func (p *pluginContext) GetServiceAccountName() string {
	return p.serviceAccountName
}

func (p *pluginContext) GetStarboardConfig() starboard.ConfigData {
	return starboardConfig
}
