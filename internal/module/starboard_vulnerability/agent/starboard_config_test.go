package agent

import (
	"testing"

	"github.com/aquasecurity/starboard/pkg/starboard"
	"github.com/stretchr/testify/assert"
)

func TestGetName(t *testing.T) {
	p := new(pluginContext)

	assert.Equal(t, "trivy", p.GetName(), "returns trivy as the context name")
}

func TestEnsureConfig(t *testing.T) {
	p := new(pluginContext)
	before, _ := p.GetConfig()
	p.EnsureConfig(starboard.PluginConfig{
		Data: map[string]string{
			"foo": "bar",
		},
	})
	after, _ := p.GetConfig()

	assert.Equal(t, before, after, "Calling EnsureConfig does not change the result of GetConfig")
}

func TestGetConfig(t *testing.T) {
	p := new(pluginContext)
	config, err := p.GetConfig()

	assert.NoError(t, err)
	assert.Equal(t, trivyScannerConfig, config, "returns trivyScannerConfig")
}

func TestGetNamespace(t *testing.T) {
	p := &pluginContext{
		namespace: "test-namespace",
	}

	assert.Equal(t, "test-namespace", p.GetNamespace())
}

func TestGetServiceAccountName(t *testing.T) {
	p := &pluginContext{
		serviceAccountName: "test-service-account",
	}

	assert.Equal(t, "test-service-account", p.GetServiceAccountName())
}

func TestGetStarboardConfig(t *testing.T) {
	p := new(pluginContext)

	assert.Equal(t, starboardConfig, p.GetStarboardConfig())
}
