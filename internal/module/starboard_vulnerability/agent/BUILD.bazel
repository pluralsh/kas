load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("//build:build.bzl", "go_custom_test")

go_library(
    name = "agent",
    srcs = [
        "doc.go",
        "factory.go",
        "module.go",
        "report.go",
        "reporter.go",
        "scanner.go",
        "scheduler.go",
        "security_policies_worker.go",
        "starboard_config.go",
        "worker.go",
    ],
    importpath = "gitlab.com/gitlab-org/cluster-integration/gitlab-agent/v15/internal/module/starboard_vulnerability/agent",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/module/modagent",
        "//internal/module/starboard_vulnerability",
        "//internal/tool/errz",
        "//internal/tool/logz",
        "//internal/tool/retry",
        "//pkg/agentcfg",
        "@com_github_aquasecurity_starboard//pkg/apis/aquasecurity/v1alpha1",
        "@com_github_aquasecurity_starboard//pkg/kube",
        "@com_github_aquasecurity_starboard//pkg/plugin",
        "@com_github_aquasecurity_starboard//pkg/starboard",
        "@com_github_aquasecurity_starboard//pkg/vulnerabilityreport",
        "@com_github_robfig_cron_v3//:cron",
        "@com_gitlab_gitlab_org_security_products_analyzers_report_v3//:report",
        "@io_k8s_api//apps/v1:apps",
        "@io_k8s_api//batch/v1:batch",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/api/meta",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/util/wait",
        "@io_k8s_sigs_controller_runtime//pkg/client",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_protobuf//proto",
        "@org_uber_go_zap//:zap",
    ],
)

go_custom_test(
    name = "agent_test",
    srcs = [
        "factory_test.go",
        "mock_job_test.go",
        "mock_scanner_test.go",
        "mock_schedule_test.go",
        "module_test.go",
        "report_test.go",
        "reporter_test.go",
        "scanner_test.go",
        "scheduler_test.go",
        "security_policies_worker_test.go",
        "starboard_config_test.go",
        "worker_test.go",
    ],
    embed = [":agent"],
    deps = [
        "//internal/module/modagent",
        "//internal/module/modshared",
        "//internal/module/starboard_vulnerability",
        "//internal/tool/testing/mock_modagent",
        "//internal/tool/testing/testhelpers",
        "//pkg/agentcfg",
        "@com_github_aquasecurity_starboard//pkg/apis/aquasecurity/v1alpha1",
        "@com_github_aquasecurity_starboard//pkg/kube",
        "@com_github_aquasecurity_starboard//pkg/starboard",
        "@com_github_golang_mock//gomock",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@com_gitlab_gitlab_org_security_products_analyzers_report_v3//:report",
        "@io_k8s_api//apps/v1:apps",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/util/wait",
        "@io_k8s_sigs_controller_runtime//pkg/client/fake",
        "@io_k8s_utils//pointer",
        "@org_uber_go_zap//zaptest",
    ],
)
