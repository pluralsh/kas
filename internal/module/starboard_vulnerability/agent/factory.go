package agent

import (
	"fmt"

	"github.com/aquasecurity/starboard/pkg/generated/clientset/versioned"
	"gitlab.com/gitlab-org/cluster-integration/gitlab-agent/v15/internal/module/modagent"
	"gitlab.com/gitlab-org/cluster-integration/gitlab-agent/v15/internal/module/starboard_vulnerability"
)

type Factory struct{}

func (f *Factory) New(cfg *modagent.Config) (modagent.Module, error) {
	config, err := cfg.K8sUtilFactory.ToRESTConfig()
	if err != nil {
		return nil, fmt.Errorf("could not get client REST config: %w", err)
	}

	clientset, err := versioned.NewForConfig(config)
	if err != nil {
		return nil, fmt.Errorf("could not initialze REST client: %w", err)
	}

	return &module{
		log:    cfg.Log,
		api:    cfg.Api,
		client: clientset.AquasecurityV1alpha1(),
	}, nil
}

func (f *Factory) Name() string {
	return starboard_vulnerability.ModuleName
}
