load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("//build:build.bzl", "go_custom_test")

go_library(
    name = "agent",
    srcs = [
        "client.go",
        "controller.go",
        "doc.go",
        "factory.go",
        "gitrepository_controller.go",
        "module.go",
        "reconcile_trigger.go",
    ],
    importpath = "gitlab.com/gitlab-org/cluster-integration/gitlab-agent/v16/internal/module/flux/agent",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/module/flux",
        "//internal/module/flux/rpc",
        "//internal/module/modagent",
        "//internal/module/modshared",
        "//internal/tool/errz",
        "//internal/tool/grpctool",
        "//internal/tool/logz",
        "//internal/tool/prototool",
        "//internal/tool/retry",
        "//internal/tool/syncz",
        "//pkg/agentcfg",
        "@com_github_fluxcd_notification_controller_api//v1:api",
        "@com_github_fluxcd_pkg_apis_meta//:meta",
        "@com_github_fluxcd_source_controller_api//v1:api",
        "@io_k8s_apiextensions_apiserver//pkg/apis/apiextensions/v1:apiextensions",
        "@io_k8s_apiextensions_apiserver//pkg/client/clientset/clientset/typed/apiextensions/v1:apiextensions",
        "@io_k8s_apimachinery//pkg/api/errors",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/apis/meta/v1/unstructured",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/runtime/schema",
        "@io_k8s_apimachinery//pkg/types",
        "@io_k8s_apimachinery//pkg/util/wait",
        "@io_k8s_client_go//applyconfigurations/core/v1:core",
        "@io_k8s_client_go//applyconfigurations/meta/v1:meta",
        "@io_k8s_client_go//dynamic",
        "@io_k8s_client_go//dynamic/dynamicinformer",
        "@io_k8s_client_go//informers",
        "@io_k8s_client_go//kubernetes",
        "@io_k8s_client_go//kubernetes/typed/core/v1:core",
        "@io_k8s_client_go//rest",
        "@io_k8s_client_go//tools/cache",
        "@io_k8s_client_go//transport",
        "@io_k8s_client_go//util/workqueue",
        "@org_uber_go_zap//:zap",
    ],
)

go_custom_test(
    name = "agent_test",
    srcs = [
        "client_test.go",
        "gitrepository_controller_test.go",
        "mock_client_for_test.go",
        "mock_reconciler_trigger_for_test.go",
        "mock_rpc_for_test.go",
        "module_test.go",
        "reconcile_trigger_test.go",
    ],
    embed = [":agent"],
    deps = [
        "//internal/module/flux/rpc",
        "//internal/module/modagent",
        "//internal/tool/retry",
        "//internal/tool/testing/matcher",
        "//internal/tool/testing/mock_k8s",
        "//internal/tool/testing/mock_modagent",
        "//internal/tool/testing/mock_stdlib",
        "//pkg/agentcfg",
        "@com_github_fluxcd_notification_controller_api//v1:api",
        "@com_github_fluxcd_source_controller_api//v1:api",
        "@com_github_golang_mock//gomock",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@io_k8s_apiextensions_apiserver//pkg/apis/apiextensions/v1:apiextensions",
        "@io_k8s_apimachinery//pkg/api/errors",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/apis/meta/v1/unstructured",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/runtime/schema",
        "@io_k8s_apimachinery//pkg/util/wait",
        "@io_k8s_utils//clock",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//metadata",
        "@org_uber_go_zap//zaptest",
    ],
)
